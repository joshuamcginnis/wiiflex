<?xml version="1.0" encoding="utf-8"?>
<mx:Application xmlns:mx="http://www.adobe.com/2006/mxml" layout="absolute" initialize="onInitialize()">
	<mx:Script>
		<![CDATA[
			import mx.core.UIComponent;
			
			import flash.display.Sprite;
			
			private var _targetRadius:int = 30;
			private var _target:UIComponent = new UIComponent();
			private var _targetLocation:Point = new Point();
			private var _fieldRect:Rectangle = new Rectangle(_targetRadius, _targetRadius);
			private var _targetMoveDistance:int = 15;
			private var _targetDirection:Number = 0;
			private var _targetDeltaX:int = 0;
			private var _targetDeltaY:int = 0;
			private var _targetTimer:Timer = new Timer(50, 0);
			private var _angleCorrection:Number = 0.2;
			
			[Bindable] 
			private var _bullets:int = 30;

			[Bindable] 
			private var _score:int = 0;
			
			private function onInitialize():void
			{
				_targetTimer.addEventListener(TimerEvent.TIMER, onMoveTarget);
			}
			
			private function onStartGame():void
			{
				_targetTimer.stop();
				btnStartGame.enabled = false;
				
				_score = 0;
				
				_fieldRect.x = _targetRadius;
				_fieldRect.y = _targetRadius;
				_fieldRect.width = field.width - (3 * _targetRadius);
				_fieldRect.height = field.height - (2 * _targetRadius);
				_targetLocation.x = (Math.random() * _fieldRect.width) + _targetRadius;
				_targetLocation.y = (Math.random() * _fieldRect.height) + _targetRadius;
				
				_target.graphics.clear();
				if (field.contains(_target))
				{
					field.removeChild(_target);
				}
				
				_target.graphics.beginFill(0x009900);
				_target.graphics.drawCircle(0, 0 ,_targetRadius);
				_target.x = _targetLocation.x;
				_target.y = _targetLocation.y;
				_target.graphics.endFill();
				
				field.addChild(_target);
				
				if (!_target.hasEventListener(MouseEvent.MOUSE_DOWN))
				{
					_target.addEventListener(MouseEvent.MOUSE_DOWN, onHit);
				}
				if (!field.hasEventListener(MouseEvent.MOUSE_DOWN))
				{
					field.addEventListener(MouseEvent.MOUSE_DOWN, onShot);
				}
				
				_targetDirection = (Math.random() * ((2 * Math.PI) - (2 * _angleCorrection))) + _angleCorrection;
/* 				if ((_targetDirection >= (90 - _angleCorrection) && _targetDirection <= 90) || (_targetDirection >= (270 - _angleCorrection) && _targetDirection <= 270))
				{
					_targetDirection -= _angleCorrection;
				}
				else if ((_targetDirection >= 90 && _targetDirection <= (90 + _angleCorrection)) || (_targetDirection >= 270 && _targetDirection <= (270 + _angleCorrection)))
				{
					_targetDirection += _angleCorrection;
				}
 */				
				_targetDeltaX = Math.cos(_targetDirection) * _targetMoveDistance;
				_targetDeltaY = Math.sin(_targetDirection) * _targetMoveDistance * -1;

				_targetTimer.start();
			}
			
			private function onMoveTarget(event:TimerEvent):void
			{
				var bounceCount:int = 0;
				
				_targetLocation.x += _targetDeltaX;
				_targetLocation.y += _targetDeltaY;
				
				if (_targetLocation.x < _fieldRect.left || _targetLocation.x > _fieldRect.right)
				{
					if (_targetDeltaX < 0)
					{
						_targetLocation.x = Math.abs(_targetDeltaX) - _target.x + (2 * _fieldRect.left)
					}
					else
					{
						_targetLocation.x = (2 * _fieldRect.right) - _targetDeltaX - _target.x;
					}
					
					_targetDeltaX = _targetDeltaX * (-1);
				}
				
				if (_targetLocation.y < _fieldRect.top || _targetLocation.y > _fieldRect.bottom)
				{
					if (_targetDeltaY < 0)
					{
						_targetLocation.y = Math.abs(_targetDeltaY) - _target.y + (2 * _fieldRect.top)
					}
					else
					{
						_targetLocation.y = (2 * _fieldRect.bottom) - _targetDeltaY - _target.y;						
					}
					
					_targetDeltaY = _targetDeltaY * (-1);
				}
				
				_target.move(_targetLocation.x, _targetLocation.y);
			}
			
			private function onShot(event:MouseEvent):void
			{
				_bullets--;
				if (_bullets == 0)
				{
					_targetTimer.stop();
					btnStartGame.enabled = true;
					
					_bullets = 30;
					
					if (_target.hasEventListener(MouseEvent.MOUSE_DOWN))
					{
						_target.removeEventListener(MouseEvent.MOUSE_DOWN, onHit);
					}
					
					if (field.hasEventListener(MouseEvent.MOUSE_DOWN))
					{
						field.removeEventListener(MouseEvent.MOUSE_DOWN, onShot);
					}
				}
			}
			
			private function onHit(event:MouseEvent):void
			{
				_score++;
			}
			
		]]>
	</mx:Script>
	
	<mx:VBox width="100%" height="100%">
		<mx:Canvas width="100%" height="20">
		</mx:Canvas>
		<mx:HBox width="100%" height="100%">
			<mx:VBox height="100%">
				<mx:Form width="100%" height="100%">
					<mx:FormItem horizontalAlign="right" width="100%" direction="horizontal">
						<mx:Button id="btnStartGame" label="Start Game" click="onStartGame()" />
					</mx:FormItem>
					<mx:FormItem label="Shots Remaining:" width="100%" direction="horizontal">
						<mx:Text id="myAmmo" text="{_bullets}" />
					</mx:FormItem>
					<mx:FormItem label="Score:" width="100%" direction="horizontal">
						<mx:Text id="myScore" text="{_score}" />
					</mx:FormItem>
				</mx:Form>
			</mx:VBox>
			<mx:Canvas id="field" width="100%" height="100%" >
			</mx:Canvas>
		</mx:HBox>
	</mx:VBox>
</mx:Application>
