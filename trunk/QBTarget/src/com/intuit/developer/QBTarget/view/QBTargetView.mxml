<?xml version="1.0" encoding="utf-8"?>
<mx:Panel xmlns:mx="http://www.adobe.com/2006/mxml" 
          creationComplete="waitForReady()"
          layout="horizontal" title="WiiFlex - How good are your wiiflexes?"
          height="70%" width="70%">
   <mx:Style source="..\..\..\..\..\..\obsidian\style\obsidian.css"/>
   <mx:Script>
         <![CDATA[
         	import com.quickbase.idn.control.events.QuickBaseEventQueryRecords;
         	import com.intuit.developer.QBTarget.dto.Games_Info;
         	import com.intuit.developer.QBTarget.dto.Games_DTO;
         	import com.quickbase.idn.control.events.KingussieEvent;
           import mx.core.UIComponent;
         
           import com.intuit.developer.QBTarget.model.QBTargetModel; //replace with correct model reference
           import com.adobe.cairngorm.control.CairngormEventDispatcher;
           import com.quickbase.idn.core.QBApp;
               
           //Get the model, make sure we can bind to it in our UI components
           [Bindable] public var model:QBTargetModel = QBTargetModel.getInstance();
               
           //variable to record whether the UI has been initialized
           private var panelInitialized:Boolean = false;
               
           //function to call when the component creation is complete, basically just
           //ensures that we wait for QBApp to tell us QuickBase is ready for 
           //interaction.
           private function waitForReady():void
           {
               _targetTimer.addEventListener(TimerEvent.TIMER, onMoveTarget);
           	
               this.addEventListener(QBApp.QUICKBASE_READY_EVENT, initPanel);
           }
           
           //function to call when the QBApp component notifies us that QuickBase is ready
           //for interaction.
           private function initPanel(ev:Event):void
           {
               if (!panelInitialized) {
               	   var getGameList:QuickBaseEventQueryRecords = new QuickBaseEventQueryRecords(Games_DTO, model, "gameList");
               	   getGameList.dispatch();
                   panelInitialized = true;
               }
           }
           
			//Start Game Play code
			private var _targetRadius:int = 30;
			private var _target:UIComponent = new UIComponent();
			private var _fieldRect:Rectangle = new Rectangle(_targetRadius, _targetRadius);
			private var _targetVelocity:int = 10;
			private var _targetDirection:Number = 0;
			private var _targetDeltaX:int = 0;
			private var _targetDeltaY:int = 0;
			private var _targetTimer:Timer = new Timer(5, 0);
			private var _angleCorrection:Number = 0.2;
			
			[Bindable] 
			private var _bullets:int = 30;

			[Bindable] 
			private var _score:int = 0;
			
			private function onStartGame():void
			{
				_targetTimer.stop();
				btnStartGame.enabled = false;
				
				_score = 0;
				_bullets = 30;
				
				_fieldRect.x = _targetRadius;
				_fieldRect.y = _targetRadius;
				_fieldRect.width = field.width - (3 * _targetRadius);
				_fieldRect.height = field.height - (2 * _targetRadius);
				
				_target.graphics.clear();
				if (field.contains(_target))
				{
					field.removeChild(_target);
				}
				
				_target.graphics.beginFill(0x192f9b);
				_target.graphics.drawCircle(0, 0 ,_targetRadius);
				_target.x = (Math.random() * _fieldRect.width) + _targetRadius;
				_target.y = (Math.random() * _fieldRect.height) + _targetRadius;
				_target.graphics.endFill();
				
				field.addChild(_target);
				
				if (!_target.hasEventListener(MouseEvent.MOUSE_DOWN))
				{
					_target.addEventListener(MouseEvent.MOUSE_DOWN, onHit);
				}
				if (!field.hasEventListener(MouseEvent.MOUSE_DOWN))
				{
					field.addEventListener(MouseEvent.MOUSE_DOWN, onShot);
				}
				
				_targetDirection = (Math.random() * ((2 * Math.PI) - (2 * _angleCorrection))) + _angleCorrection;
				_targetDeltaX = Math.cos(_targetDirection) * _targetVelocity;
				_targetDeltaY = Math.sin(_targetDirection) * _targetVelocity * -1;

				_targetTimer.start();
			}
			
			private function onMoveTarget(event:TimerEvent):void
			{
				_target.x += _targetDeltaX
				_target.y += _targetDeltaY
				
				if (_target.x < _fieldRect.left || _target.x > _fieldRect.right)
				{
					_targetDeltaX = -_targetDeltaX;
				}
				
				if (_target.y < _fieldRect.top || _target.y > _fieldRect.bottom)
				{
					_targetDeltaY = -_targetDeltaY;
				}
			}
			
			private function onShot(event:MouseEvent):void
			{
				_bullets--;
				if (_bullets == 0)
				{
					_targetTimer.stop();
					btnStartGame.enabled = true;
					
					if (_target.hasEventListener(MouseEvent.MOUSE_DOWN))
					{
						_target.removeEventListener(MouseEvent.MOUSE_DOWN, onHit);
					}
					
					if (field.hasEventListener(MouseEvent.MOUSE_DOWN))
					{
						field.removeEventListener(MouseEvent.MOUSE_DOWN, onShot);
					}
				}
			}
			
			private function onHit(event:MouseEvent):void
			{
				_score++;
			}
			//End Game Play code             
         ]]>
   </mx:Script>  
	<mx:VBox width="100%" height="100%">
		<mx:Canvas width="100%" height="20">
		</mx:Canvas>
		<mx:HBox width="100%" height="100%">
			<mx:VBox height="100%">
				<mx:Form width="100%" height="165">
					<mx:FormItem horizontalAlign="right" width="100%" direction="horizontal">
						<mx:Button id="btnStartGame" label="Start Game" click="onStartGame()" />
					</mx:FormItem>
					<mx:FormItem label="Shots Remaining:" width="100%" direction="horizontal">
						<mx:Text id="myAmmo" text="{_bullets}" />
					</mx:FormItem>
					<mx:FormItem label="Score:" width="100%" direction="horizontal">
						<mx:Text id="myScore" text="{_score}" />
					</mx:FormItem>
				</mx:Form>
				<mx:DataGrid id="gameList" dataProvider="{model.gameList}" width="453" height="50%">
					<mx:columns>
						<mx:DataGridColumn dataField="Player" headerText="Player" />
						<mx:DataGridColumn dataField="TotalBullets" headerText="Total Bullets" />
						<mx:DataGridColumn dataField="ShotsTaken" headerText="Shots Taken" />
						<mx:DataGridColumn dataField="Hits" headerText="Hits" />
					</mx:columns>
				</mx:DataGrid>
			</mx:VBox>
			<mx:Canvas id="field" width="100%" height="100%" styleName="gamebox">
			</mx:Canvas>
		</mx:HBox>
	</mx:VBox>
</mx:Panel>
